#!/usr/bin/env node

/**
 * Copyright 2017, Google, Inc.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use strict';

const childProcess = require('child_process');
const rcloadenv = require('../');

const USAGE = 'Usage: rcloadenv <configName> -- <args...>';

const configName = process.argv.slice(2)[0];
const args = process.argv.slice(4);

if (!configName || !args.length) {
  console.error(USAGE);
  process.exit(1);
}

const currentEnv = Object.assign({}, process.env);

rcloadenv.getAndApply(configName, currentEnv)
  .then((env) => {

    return new Promise((resolve, reject) => {
      childProcess.spawn(args.shift(), args, {
        stdio: 'inherit',
        env
      }).on('error', console.error).on('exit', (code) => {
        if (code === 0) {
          resolve();
        } else {
          reject(new Error('Command failed'));
        }
      });
    });
  })
  .catch((err) => {
    console.error(process.env.DEBUG ? err.stack : err.message);
    process.exit(1);
  });
